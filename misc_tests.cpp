
#include <iostream>

//const int c ;	// ОШИБКА: Необходима инициализация константы

int main(int argc, char* argv[]) 
{ 
	int i1 = 1.111;
	int i = {i1};	// Инициализация с проверкой допустимости значения
	//double* dp = &i;

	int var = 5;
	// ссылка на указатель
	int* ip = &var, *&r = ip;
	std::cout << "ip: "<<  *ip << " r: "<< r << " *r: "<< *r << std::endl;
	// ПРИМ. Указатель на ссылку не сущесствует т.к. ссылка - не объект в отличие от указателя


	double dval = 3.14;
	// создается временная переменная и ссылка связывается с temp (3)
	// const int temp = dval;
	const int &ri = dval;
	std::cout << "ri: " << ri << std::endl;


	const int ic=0, &rc = 0, *pc;
	//int *const ptr; // ОШИБКА: Необходима инициализация константного указателя
	//const int &const r2;	// ОШИБКА: Необходима инициализация ссылки
	int a = -1;
	const int a2 = a, &ra = a;
	// ПРИМ. Константная ссылка (указатель) определяет только набор доступных операция по ссылку (указателю)
	// Сам объект на который ссылаются (указывают) может быть неконстантным и изменяться напрямую. 


	// ПРИМ. Преобразование не константы в константу возможно, но не наоборот
	const int *p1;
	int *const p2 = nullptr;
	p1 = p2;
	//const int b = 1;
	//int &rb = b;		// ОШИБКА

	constexpr int *q = nullptr; // Константный указатель на int
	// ПРИМ. constexpr используются ВНЕ любых функций


	return 0;
}